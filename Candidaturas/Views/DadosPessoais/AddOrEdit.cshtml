<script type="text/javascript" src="~/Scripts/documentValidation.js"></script>

@model Candidaturas.Models.DadosPessoai

    @{
        Layout = null;
    }

    @using (@Html.BeginForm("DadosPessoais", "DadosPessoais", FormMethod.Post, new { @id = "formDadosPessoais" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col">
                <h4 class="candidaturasHeader">Informação Pessoal</h4>

                <div class="form-group">
                    @Html.LabelFor(model => model.NomeColoquial, "Nome Completo", htmlAttributes: new { @class = "control-label required" })
                    <div class="col">
                        @Html.EditorFor(model => model.NomeColoquial, new { htmlAttributes = new { @class = "form-control", @required = "required", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.NomeColoquial) } })
                        @Html.ValidationMessageFor(model => model.NomeColoquial, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Nomes, "Nomes", htmlAttributes: new { @class = "control-label required" })
                    <div class="col">
                        @Html.EditorFor(model => model.Nomes, new { htmlAttributes = new { @class = "form-control", @required = "required", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.Nomes) } })
                        @Html.ValidationMessageFor(model => model.Nomes, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Apelidos, "Apelidos", htmlAttributes: new { @class = "control-label required" })
                    <div class="col">
                        @Html.EditorFor(model => model.Apelidos, new { htmlAttributes = new { @class = "form-control", @required = "required", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.Apelidos) } })
                        @Html.ValidationMessageFor(model => model.Apelidos, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NomePai, "Nome do Pai", htmlAttributes: new { @class = "control-label " })
                    <div class="col">
                        @Html.EditorFor(model => model.NomePai, new { htmlAttributes = new { @class = "form-control", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.NomePai) } })
                        @Html.ValidationMessageFor(model => model.NomePai, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NomeMae, "Nome da Mãe", htmlAttributes: new { @class = "control-label " })
                    <div class="col">
                        @Html.EditorFor(model => model.NomeMae, new { htmlAttributes = new { @class = "form-control", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.NomeMae) } })
                        @Html.ValidationMessageFor(model => model.NomeMae, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Genero, "Género", htmlAttributes: new { @class = "control-label required" })
                    <div class="col">
                        @Html.DropDownListFor(model => model.Genero, ViewBag.Genero as SelectList, "Escolha uma opção...", new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DataNascimento, "Data de Nascimento", htmlAttributes: new { @class = "control-label required" })
                    <div class="col">
                        @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control", type = "date", @id = "DtNasc", @required = "required", @Value = ViewBag.DadosPessoais.DataNascimento.ToString("yyyy-MM-dd") } })
                        @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger", @id = "AvisoDT" })
                        <span id="DtNascWarning" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EstadoCivil, "Estado Civil", htmlAttributes: new { @class = "control-label required" })
                    <div class="col">
                        @Html.DropDownListFor(model => model.EstadoCivil, ViewBag.EstadoCivil as SelectList, "Escolha uma opção...", new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.EstadoCivil, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Telefone, "Telefone", htmlAttributes: new { @class = "control-label " })
                    <div class="col">
                        @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @type = "number", @class = "form-control", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.Telefone) } })
                        @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <hr />
                <h4 class="candidaturasHeader">Naturalidade</h4>

                <div class="form-group">
                    @Html.LabelFor(model => model.Nacionalidade, "País", htmlAttributes: new { @class = "control-label required" })
                    <div class="col">
                        @Html.DropDownListFor(model => model.Nacionalidade, ViewBag.Nacionalidade as SelectList, "Escolha uma opção...", new { @class = "form-control", @required = "required" })
                        @Html.ValidationMessageFor(model => model.Nacionalidade, "", new { @class = "text-danger" })
                        <span id="NacWarning" for="NIF" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DistritoNatural, "Distrito", htmlAttributes: new { @class = "control-label disabled" })
                    <div class="col">
                        @Html.DropDownListFor(model => model.DistritoNatural, ViewBag.DistritoNatural as SelectList, "Escolha uma opção...", new { @class = "form-control", @onchange = "changeConcelhos(true)", disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.DistritoNatural, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConcelhoNatural, "Concelho", htmlAttributes: new { @id = "conc", @class = "control-label disabled" })
                    <div class="col">
                        @Html.DropDownListFor(model => model.ConcelhoNatural, ViewBag.ConcelhoNatural as SelectList, "Escolha uma opção...", new { @class = "form-control", @onchange = "changeFreguesias(true)", disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.ConcelhoNatural, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FreguesiaNatural, "Freguesia", htmlAttributes: new { @class = "control-label disabled" })
                    <div class="col">
                        @Html.DropDownListFor(model => model.FreguesiaNatural, ViewBag.FreguesiaNatural as SelectList, "Escolha uma opção...", new { @class = "form-control", disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.FreguesiaNatural, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col">
                <h4 class="candidaturasHeader">Morada</h4>

                <div class="form-group">
                    @Html.LabelFor(model => model.Morada, "Morada", htmlAttributes: new { @class = "control-label required" })
                    <div class="col">
                        @Html.EditorFor(model => model.Morada, new { htmlAttributes = new { @class = "form-control", @required = "required", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.Morada) } })
                        @Html.ValidationMessageFor(model => model.Morada, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CodigoPostal4Dig, "Código Postal", htmlAttributes: new { @class = "control-label required" })
                    <div class="col">
                        <div class="form-inline">
                            @Html.EditorFor(model => model.CodigoPostal4Dig, new { htmlAttributes = new { @type = "number", @class = "form-control", @required = "required", @style = "width:40%", @placeholder = "NNNN", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.CodigoPostal4Dig) } })
                            -
                            @Html.EditorFor(model => model.CodigoPostal3Dig, new { htmlAttributes = new { @type = "number", @class = "form-control", @required = "required", @style = "width:20%", @placeholder = "NNN", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.CodigoPostal3Dig) } })
                        </div>
                        @Html.ValidationMessageFor(model => model.CodigoPostal4Dig, "", new { @class = "text-danger", @id = "AvisoCP" })
                        <span id="CPWarning" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DistritoMorada, "Distrito", htmlAttributes: new { @class = "control-label required " })
                    <div class="col">
                        @Html.DropDownListFor(model => model.DistritoMorada, ViewBag.DistritoMorada as SelectList, "Escolha uma opção...", new { @class = "form-control", @required = "required", @onchange = "changeConcelhos(false)" })
                        @Html.ValidationMessageFor(model => model.DistritoMorada, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConcelhoMorada, "Concelho", htmlAttributes: new { @class = "control-label required  disabled" })
                    <div class="col">
                        @Html.DropDownListFor(model => model.ConcelhoMorada, ViewBag.ConcelhoMorada as SelectList, "Escolha uma opção...", new { @class = "form-control", @required = "required", @onchange = "changeFreguesias(false)", disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.ConcelhoMorada, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FreguesiaMorada, "Freguesia", htmlAttributes: new { @class = "control-label required  disabled" })
                    <div class="col">
                        @Html.DropDownListFor(model => model.FreguesiaMorada, ViewBag.FreguesiaMorada as SelectList, "Escolha uma opção...", new { @class = "form-control", @required = "required", @onchange = "changeRepFinNIF()", disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.FreguesiaMorada, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Localidade, "Localidade", htmlAttributes: new { @class = "control-label required disabled" })
                    <div class="col">
                        @Html.DropDownListFor(model => model.Localidade, ViewBag.Localidade as SelectList, "Escolha uma opção...", new { @class = "form-control", @required = "required", disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.Localidade, "", new { @class = "text-danger" })
                    </div>
                </div>

                <hr />

                <div class="col">

                    <h4 class="candidaturasHeader">Documento de Identificação</h4>
                    <div class="form-group">
                        @Html.LabelFor(model => model.TipoDocID, "Tipo", htmlAttributes: new { @class = "control-label required" })
                        <div class="col">
                            @Html.DropDownListFor(model => model.TipoDocID, ViewBag.TipoDocID as SelectList, "Escolha uma opção...", new { @class = "form-control", @id = "TipoDoc" })
                            @Html.ValidationMessageFor(model => model.TipoDocID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NDI, "Número", htmlAttributes: new { @class = "control-label required" })
                        <div class="col">
                            @Html.EditorFor(model => model.NDI, new { htmlAttributes = new { @class = "form-control", @id = "NDI", @required = "required", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.NDI) } })
                            @Html.ValidationMessageFor(model => model.NDI, "", new { @class = "text-danger", @id = "AvisoNDI" })
                            <span id="NDIWarning" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DocumentoValidade, "Validade", htmlAttributes: new { @class = "control-label required" })
                        <div class="col">
                            @Html.EditorFor(model => model.DocumentoValidade, new { htmlAttributes = new { @class = "form-control", type = "date", @id = "DocVali", @required = "required", @Value = ViewBag.DadosPessoais.DocumentoValidade.ToString("yyyy-MM-dd") } })
                            @Html.ValidationMessageFor(model => model.DocumentoValidade, "", new { @class = "text-danger", @id = "AvisoDocVali" })
                            <span id="DocValiWarning" class="text-danger"></span>
                        </div>
                    </div>

                    <hr />
                    <h4 class="candidaturasHeader">Identificação Fiscal</h4>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NIF, "Número", htmlAttributes: new { @class = "control-label" })
                        <div class="col">
                            @Html.EditorFor(model => model.NIF, new { htmlAttributes = new { @class = "form-control", @id = "NIF", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.NIF) } })
                            @Html.ValidationMessageFor(model => model.NIF, "", new { @class = "text-danger", @id = "AvisoNIF" })
                            <span id="NIFWarning" class = "text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RepFinNIF, "Repartição de Finanças", htmlAttributes: new { @class = "control-label disabled" })
                        <div class="col">
                            @Html.DropDownListFor(model => model.RepFinNIF, ViewBag.RepFinNIF as SelectList, "Escolha uma opção...", new { @class = "form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.RepFinNIF, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col">
                    <h4 class="candidaturasHeader">Segurança Social</h4>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NSegSoc, "Número", htmlAttributes: new { @class = "control-label" })
                        <div class="col">
                            @Html.EditorFor(model => model.NSegSoc, new { htmlAttributes = new { @class = "form-control", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.NSegSoc) } })
                            @Html.ValidationMessageFor(model => model.NSegSoc, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>

            <hr />

            <div class="row">

                <div class="col" id="militar">
                    <hr />
                    <h4 class="candidaturasHeader">Informação Militar</h4>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NIM, "Número", htmlAttributes: new { @class = "control-label" })
                        <div class="col">
                            @Html.EditorFor(model => model.NIM, new { htmlAttributes = new { @class = "form-control", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.NIM) } })
                            @Html.ValidationMessageFor(model => model.NIM, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Ramo, "Ramo", htmlAttributes: new { @class = "control-label " })
                        <div class="col">
                            @Html.DropDownListFor(model => model.Ramo, ViewBag.Ramo as SelectList, "Escolha uma opção...", new { @class = "form-control", @onchange = "resetPostos()" })
                            @Html.ValidationMessageFor(model => model.Ramo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Categoria, "Categoria", htmlAttributes: new { @class = "control-label " })
                        <div class="col">
                            @Html.DropDownListFor(model => model.Categoria, ViewBag.Categoria as SelectList, "Escolha uma opção...", new { @class = "form-control", @onchange = "changePostos()" })
                            @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Posto, "Posto", htmlAttributes: new { @class = "control-label " })
                        <div class="col">
                            @Html.DropDownListFor(model => model.Posto, ViewBag.Posto as SelectList, "Escolha uma opção...", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Posto, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Classe, "Classe", htmlAttributes: new { @class = "control-label " })
                        <div class="col">
                            @Html.EditorFor(model => model.Classe, new { htmlAttributes = new { @class = "form-control", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.Classe) } })
                            @Html.ValidationMessageFor(model => model.Classe, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col">
                <input class="btn btn-primary" type="submit" value="Continuar" />

            </div>
        </div>
    }
    <script type="text/javascript">

    //truque para usar boolean values de C# em JS
    var True = true, False = false;
    window.onload = handleDisablesAndRequired();

    function handleDisablesAndRequired() {
        showMilitar();
        disabledCampos();

    }

    function disabledCampos() {
        if (@ViewBag.finalizado == true) {
            $('#formDadosPessoais :input').attr("disabled", true);
            $('#formDadosPessoais :select').attr("disabled", true);
            $('#militar :input').attr("disabled", true);
            $('#militar :select').attr("disabled", true);
        }

        if (@ViewData["dm"]) {
            console.log(@ViewData["dm"]);
            $('#ConcelhoMorada').prop('disabled', false);
            $('#FreguesiaMorada').prop('disabled', false);
            $('#Localidade').prop('disabled', false);
            $('#RepFinNIF').prop('disabled', false);
            var distritoMoradaEscolhido = $('#DistritoMorada').val();
            var codigoDistrito = parseInt(distritoMoradaEscolhido);
            if (codigoDistrito > 18) {
                var $select3 = $('#Localidade');
                $select3.prop('disabled', true);
                $select3.prop('required', false);
                $("label[for='Localidade']").removeClass('required');
            } else {
                var $select3 = $('#Localidade');
                $select3.prop('disabled', false);
                $select3.prop('required', true);
                $("label[for='Localidade']").addClass('required');
            }
        }

        if (@ViewData["dn"]) {
            $('#ConcelhoNatural').prop('disabled', false);
            $('#FreguesiaNatural').prop('disabled', false);
        }

        var nac = $("#Nacionalidade").val();
        if (nac === "PT") {
            $("#NIF").prop('required', true);
            $("label[for='NIF']").addClass('required');
            $("#RepFinNIF").prop('required', true);
            $("label[for='RepFinNIF']").addClass('required');
            $('#DistritoNatural').prop('disabled', false);
        }
    }

    function showMilitar() {
        if (@ViewData["mil"]) {
            $('#NIM').prop('required', true);
            $('#Ramo').prop('required', true);
            $('#Categoria').prop('required', true);
            $('#Posto').prop('required', true);
        } else {
            $("#militar").hide();
        }
    }

    //altera os concelhos consoante o distrito escolhido
    function changeConcelhos(isNatural) {
        if (isNatural) {
            var distritoNaturalEscolhido = $('#DistritoNatural').val();
            var codigoDistrito = parseInt(distritoNaturalEscolhido);
            if (distritoNaturalEscolhido != "") {
                $.ajax({
                    url: '@Url.Action("UpdateConcelhos", "DadosPessoais")',
                    data: {
                        distrito: codigoDistrito
                    },
                    type: "POST",
                    success: function (concelhos) {
                        var $select = $('#ConcelhoNatural');
                        $select.empty();
                        $select.append('<option value="">Escolha uma opção...</option>');
                        $select.prop('disabled', false);
                        var $select2 = $('#FreguesiaNatural');
                        $select2.empty();
                        $select2.append('<option value="">Escolha uma opção...</option>');
                        $select2.prop('disabled', true);
                        $.each(concelhos, function (i, concelho) {
                            $('<option>', {
                                value: concelho.ID
                            }).html(concelho.Name).appendTo($select);
                        });

                    },
                    error: function (e) { console.log(e); }
                })
            } else {
                var $select = $('#ConcelhoNatural');
                $select.empty();
                $select.append('<option value="">Escolha uma opção...</option>');
                $select.prop('disabled', true);
                var $select2 = $('#FreguesiaNatural');
                $select2.empty();
                $select2.append('<option value="">Escolha uma opção...</option>');
                $select2.prop('disabled', true);

            }
           
        }
        else {
            var distritoMoradaEscolhido = $('#DistritoMorada').val();
            var codigoDistrito = parseInt(distritoMoradaEscolhido);
            if (distritoMoradaEscolhido != "") {
                $.ajax({
                    url: '@Url.Action("UpdateConcelhos", "DadosPessoais")',
                    data: {
                        distrito: codigoDistrito
                    },
                    type: "POST",
                    success: function (concelhos) {
                        var $select = $('#ConcelhoMorada');
                        $select.empty();
                        $select.append('<option value="">Escolha uma opção...</option>');
                        $select.prop('disabled', false);
                        var $select2 = $('#FreguesiaMorada');
                        $select2.empty();
                        $select2.append('<option value="">Escolha uma opção...</option>');
                        $select2.prop('disabled', true);
                        var $select3 = $('#Localidade');
                        $select3.empty();
                        $select3.append('<option value="">Escolha uma opção...</option>');
                        $select3.prop('disabled', true);
                        var $select4 = $('#RepFinNIF');
                        $select4.empty();
                        $select4.append('<option value="">Escolha uma opção...</option>');
                        $select4.prop('disabled', true);
                        $.each(concelhos, function (i, concelho) {
                            $('<option>', {
                                value: concelho.ID
                            }).html(concelho.Name).appendTo($select);
                        });
                    },
                    error: function (e) { console.log(e); }
                })
           

            if (codigoDistrito > 18) {
                var $select3 = $('#Localidade');
                $select3.prop('disabled', true);
                $select3.prop('required', false);
                $("label[for='Localidade']").removeClass('required');
            } else {
                var $select3 = $('#Localidade');
                $select3.prop('disabled', false);
                $select3.prop('required', true);
                $("label[for='Localidade']").addClass('required');
                }
            } else {
                var $select = $('#ConcelhoMorada');
                $select.empty();
                $select.append('<option value="">Escolha uma opção...</option>');
                $select.prop('disabled', true);
                var $select2 = $('#FreguesiaMorada');
                $select2.empty();
                $select2.append('<option value="">Escolha uma opção...</option>');
                $select2.prop('disabled', true);
                var $select3 = $('#Localidade');
                $select3.empty();
                $select3.append('<option value="">Escolha uma opção...</option>');
                $select3.prop('disabled', true);
                var $select4 = $('#RepFinNIF');
                $select4.empty();
                $select4.append('<option value="">Escolha uma opção...</option>');
                $select4.prop('disabled', true);
            }
        }
    }
    //altera as freguesias consoante o concelho escolhido
    function changeFreguesias(isNatural) {
        if (isNatural) {
            var distritoNaturalEscolhido = $('#DistritoNatural').val();
            var codigoDistrito = parseInt(distritoNaturalEscolhido);
            var concelhoNaturalEscolhido = $('#ConcelhoNatural').val();
            var codigoConcelho = parseInt(concelhoNaturalEscolhido);
            if (distritoNaturalEscolhido != "" && concelhoNaturalEscolhido != "") {
                $.ajax({
                    url: '@Url.Action("UpdateFreguesias", "DadosPessoais")',
                    data: {
                        distrito: codigoDistrito,
                        concelho: codigoConcelho
                    },
                    type: "POST",
                    success: function (freguesias) {
                        var $select = $('#FreguesiaNatural');
                        $select.empty();
                        $select.append('<option value="">Escolha uma opção...</option>');
                        $select.prop('disabled', false);
                        $.each(freguesias, function (i, freguesia) {
                            $('<option>', {
                                value: freguesia.ID
                            }).html(freguesia.Name).appendTo($select);
                        });
                    },
                    error: function (e) { console.log(e); }
                })
            } else {
                var $select = $('#FreguesiaNatural');
                $select.empty();
                $select.append('<option value="">Escolha uma opção...</option>');
                $select.prop('disabled', true);
            }
        }
        else {
            var distritoMoradaEscolhido = $('#DistritoMorada').val();
            var codigoDistrito = parseInt(distritoMoradaEscolhido);
            var concelhoMoradaEscolhido = $('#ConcelhoMorada').val();
            var codigoConcelho = parseInt(concelhoMoradaEscolhido);
            if (distritoMoradaEscolhido != "" && concelhoMoradaEscolhido != "") {
                $.ajax({
                    url: '@Url.Action("UpdateFreguesias", "DadosPessoais")',
                    data: {
                        distrito: codigoDistrito,
                        concelho: codigoConcelho
                    },
                    type: "POST",
                    success: function (freguesias) {
                        var $select = $('#FreguesiaMorada');
                        $select.empty();
                        $select.append('<option value="">Escolha uma opção...</option>');
                        $select.prop('disabled', false);
                        var $select2 = $('#Localidade');
                        $select2.empty();
                        $select2.append('<option value="">Escolha uma opção...</option>');
                        $select2.prop('disabled', true);
                        var $select3 = $('#RepFinNIF');
                        $select3.empty();
                        $select3.append('<option value="">Escolha uma opção...</option>');
                        $select3.prop('disabled', true);

                        $.each(freguesias, function (i, freguesia) {
                            $('<option>', {
                                value: freguesia.ID
                            }).html(freguesia.Name).appendTo($select);
                        });

                    },
                    error: function (e) { console.log(e); }
                })
                changeLocalidades();
            } else {
                var $select = $('#FreguesiaMorada');
                $select.empty();
                $select.append('<option value="">Escolha uma opção...</option>');
                $select.prop('disabled', true);
                var $select2 = $('#Localidade');
                $select2.empty();
                $select2.append('<option value="">Escolha uma opção...</option>');
                $select2.prop('disabled', true);
                var $select3 = $('#RepFinNIF');
                $select3.empty();
                $select3.append('<option value="">Escolha uma opção...</option>');
                $select3.prop('disabled', true);
            }
        }
    }
    //altera as localidades consoante o distrito escolhido
    function changeLocalidades() {
        var distritoMoradaEscolhido = $('#DistritoMorada').val();
        var codigoDistrito = parseInt(distritoMoradaEscolhido);
        var concelhoMoradaEscolhido = $('#ConcelhoMorada').val();
        var codigoConcelho = parseInt(concelhoMoradaEscolhido);
        if (distritoMoradaEscolhido != "" && concelhoMoradaEscolhido != "") {
            if (codigoDistrito <= 18) {
                $.ajax({
                    url: '@Url.Action("UpdateLocalidades", "DadosPessoais")',
                    data: {
                        distrito: codigoDistrito,
                        concelho: codigoConcelho
                    },
                    type: "POST",
                    success: function (localidades) {
                        var $select = $('#Localidade');
                        $select.empty();
                        $select.append('<option value="">Escolha uma opção...</option>');
                        $select.prop('disabled', false);
                        $.each(localidades, function (i, localidade) {
                            $('<option>', {
                                value: localidade.ID
                            }).html(localidade.Name).appendTo($select);
                        });

                    },
                    error: function (e) { console.log(e); }
                })
            }
        } else {
            var $select = $('#Localidade');
            $select.empty();
            $select.append('<option value="">Escolha uma opção...</option>');
            $select.prop('disabled', true);
        }
    }

    function changeRepFinNIF() {
        var distritoMoradaEscolhido = $('#DistritoMorada').val();
        var codigoDistrito = parseInt(distritoMoradaEscolhido);
        var concelhoMoradaEscolhido = $('#ConcelhoMorada').val();
        var codigoConcelho = parseInt(concelhoMoradaEscolhido);
        var freguesiaMoradaEscolhido = $('#FreguesiaMorada').val();
        var codigoFreguesia = parseInt(freguesiaMoradaEscolhido);
        if (distritoMoradaEscolhido != "" && concelhoMoradaEscolhido != "" && freguesiaMoradaEscolhido != "") {
            $.ajax({
                url: '@Url.Action("UpdateReparticoes", "DadosPessoais")',
                data: {
                    distrito: codigoDistrito,
                    concelho: codigoConcelho,
                    freguesia: codigoFreguesia
                },
                type: "POST",
                success: function (reparticoes) {
                    var $select = $('#RepFinNIF');
                    $select.empty();
                    $select.append('<option value="">Escolha uma opção...</option>');
                    $select.prop('disabled', false);
                    $.each(reparticoes, function (i, reparticao) {
                        $('<option>', {
                            value: reparticao.ID
                        }).html(reparticao.Name).appendTo($select);
                    });

                },
                error: function (e) { console.log(e); }
            })
        } else {
            var $select = $('#RepFinNIF');
            $select.empty();
            $select.append('<option value="">Escolha uma opção...</option>');
            $select.prop('disabled', true);
        }
    }

    //altera os postos consoante o ramo e categoria escolhido
    function changePostos() {
        var ramoEscolhido = $('#Ramo').val();
        var categoriaEscolhida = $('#Categoria').val();
        if (ramoEscolhido != "" && categoriaEscolhida != "") {
            $.ajax({
                url: '@Url.Action("UpdatePostos", "User")',
                data: {
                    ramo: ramoEscolhido,
                    categoria: categoriaEscolhida
                },
                type: "POST",
                success: function (postos) {
                    var $select = $('#Posto');
                    $select.empty();
                    $select.append('<option value="">Escolha uma opção...</option>');
                    $select.prop('disabled', false);
                    $.each(postos, function (i, posto) {
                        $('<option>', {
                            value: posto.ID
                        }).html(posto.Name).appendTo($select);
                    });
                },
                error: function (e) { console.log(e); }
            })
        } else {
            var $select = $('#Posto');
            $select.empty();
            $select.append('<option value="">Escolha uma opção...</option>');
            $select.prop('disabled', true);
        }
    }

    function resetPostos() {
        var $posto = $('#Posto');
        $posto.empty();
        $posto.append('<option value="">Escolha uma opção...</option>');
        $posto.prop('disabled', true);
    }

    </script>
    <style>
        .dadosPessoaisHr {
            width: 85%;
        }
    </style>
