@model Candidaturas.Models.DadosPessoai
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript" src="~/Scripts/documentValidation.js"></script>
@using (Html.BeginForm("DadosPessoais", "Formulario", FormMethod.Post, new { @id = "formDadosPessoais", onsubmit = "finalValidation()" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" style="margin-top: 20px;">

    <div class="column">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <h4 class="candidaturasHeader">Informações Pessoais</h4>

        <div class="form-group">
            @Html.LabelFor(model => model.NomeColoquial, "Nome Coloquial", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeColoquial, new { htmlAttributes = new { @class = "form-control", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.NomeColoquial) } })
                @Html.ValidationMessageFor(model => model.NomeColoquial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nomes, "Nomes", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nomes, new { htmlAttributes = new { @class = "form-control", @required = "required", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.Nomes) } })
                @Html.ValidationMessageFor(model => model.Nomes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Apelidos, "Apelidos", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Apelidos, new { htmlAttributes = new { @class = "form-control", @required = "required", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.Apelidos) } })
                @Html.ValidationMessageFor(model => model.Apelidos, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NomePai, "Nome do Pai", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomePai, new { htmlAttributes = new { @class = "form-control", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.NomePai) } })
                @Html.ValidationMessageFor(model => model.NomePai, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NomeMae, "Nome da Mãe", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeMae, new { htmlAttributes = new { @class = "form-control", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.NomeMae) } })
                @Html.ValidationMessageFor(model => model.NomeMae, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genero, "Género", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Genero, ViewBag.Genero as SelectList, "Escolha uma opção...", new { @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstadoCivil, "Estado Civil", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EstadoCivil, ViewBag.EstadoCivil as SelectList, "Escolha uma opção...", new { @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.EstadoCivil, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefone, "Telefone", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @type = "number", @class = "form-control", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.Telefone) } })
                @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr class="dadosPessoaisHr" />

        <h4 class="candidaturasHeader">Morada</h4>

        <div class="form-group">
            @Html.LabelFor(model => model.Morada, "Morada", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Morada, new { htmlAttributes = new { @class = "form-control", @required = "required", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.Morada) } })
                @Html.ValidationMessageFor(model => model.Morada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodigoPostal4Dig, "Código Postal", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                <div class="form-inline">
                    @Html.EditorFor(model => model.CodigoPostal4Dig, new { htmlAttributes = new { @type = "number", @class = "form-control", @required = "required", @style = "width:40%", @placeholder = "NNNN", maxlength = "10", min = "0", max = "9999", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.CodigoPostal4Dig) } })
                    -
                    @Html.EditorFor(model => model.CodigoPostal3Dig, new { htmlAttributes = new { @type = "number", @class = "form-control", @required = "required", @style = "width:20%", @placeholder = "NNN", maxlength = "3", min= "0", max="999", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.CodigoPostal3Dig) } })
                </div>
                @Html.ValidationMessageFor(model => model.CodigoPostal4Dig, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.CodigoPostal3Dig, "", new { @class = "text-danger" })
                <span id="CPWarning" for="CodigoPostalDig" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DistritoMorada, "Distrito", htmlAttributes: new { @class = "control-label col-md-2 required " })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DistritoMorada, ViewBag.DistritoMorada as SelectList, "Escolha uma opção...", new { @class = "form-control", @required = "required", @onchange = "changeConcelhos(false)" })
                @Html.ValidationMessageFor(model => model.DistritoMorada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConcelhoMorada, "Concelho", htmlAttributes: new { @class = "control-label col-md-2 required  disabled" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ConcelhoMorada, ViewBag.ConcelhoMorada as SelectList, "Escolha uma opção...", new { @class = "form-control", @required = "required", @onchange = "changeFreguesias(false)", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.ConcelhoMorada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FreguesiaMorada, "Freguesia", htmlAttributes: new { @class = "control-label col-md-2 required  disabled" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FreguesiaMorada, ViewBag.FreguesiaMorada as SelectList, "Escolha uma opção...", new { @class = "form-control", @required = "required", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.FreguesiaMorada, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Localidade, "Localidade", htmlAttributes: new { @class = "control-label col-md-2 required  disabled" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Localidade, ViewBag.Localidade as SelectList, "Escolha uma opção...", new { @class = "form-control", @required = "required", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.Localidade, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="column">
        <h4 class="candidaturasHeader">Naturalidade</h4>

        <div class="form-group">
            @Html.LabelFor(model => model.Nacionalidade, "País", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Nacionalidade, ViewBag.Nacionalidade as SelectList, "Escolha uma opção...", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Nacionalidade, "", new { @class = "text-danger" })
                <span id="NacWarning" for="NIF" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DistritoNatural, "Distrito", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DistritoNatural, ViewBag.DistritoNatural as SelectList, "Escolha uma opção...", new { @class = "form-control", @onchange = "changeConcelhos(true)" })
                @Html.ValidationMessageFor(model => model.DistritoNatural, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConcelhoNatural, "Concelho", htmlAttributes: new { @id = "conc", @class = "control-label col-md-2  disabled" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ConcelhoNatural, ViewBag.ConcelhoNatural as SelectList, "Escolha uma opção...", new { @class = "form-control", @onchange = "changeFreguesias(true)", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.ConcelhoNatural, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FreguesiaNatural, "Freguesia", htmlAttributes: new { @class = "control-label col-md-2 disabled" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FreguesiaNatural, ViewBag.FreguesiaNatural as SelectList, "Escolha uma opção...", new { @class = "form-control", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.FreguesiaNatural, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr class="dadosPessoaisHr" />

        <h4 class="candidaturasHeader">Documento de Identificação</h4>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoDocID, "Documento de Identificação", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TipoDocID, ViewBag.TipoDocID as SelectList, "Escolha uma opção...", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoDocID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NDI, "Nº de Identificação", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NDI, new { htmlAttributes = new { @class = "form-control", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.NDI) } })
                @Html.ValidationMessageFor(model => model.NDI, "", new { @class = "text-danger" })
                <span id="NDIWarning" for="NDI" class="text-danger"></span>
            </div>
        </div>

        <hr class="dadosPessoaisHr" />

        <h4 class="candidaturasHeader">Identificação Fiscal</h4>

        <div class="form-group">
            @Html.LabelFor(model => model.NIF, "Número", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NIF, new { htmlAttributes = new { @class = "form-control", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.NIF)} })
                @Html.ValidationMessageFor(model => model.NIF, "", new { @class = "text-danger" })
                <span id="NIFWarning" for="NIF" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RepFinNIF, "Repartição Finanças", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RepFinNIF, new { htmlAttributes = new { @class = "form-control", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.RepFinNIF) } })
                @Html.ValidationMessageFor(model => model.RepFinNIF, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr class="dadosPessoaisHr" />

        <h4 class="candidaturasHeader">Segurança Social</h4>

        <div class="form-group">
            @Html.LabelFor(model => model.NSegSoc, "Número", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NSegSoc, new { htmlAttributes = new { @class = "form-control", @Value = (ViewBag.DadosPessoais == null ? "" : ViewBag.DadosPessoais.NSegSoc) } })
                @Html.ValidationMessageFor(model => model.NSegSoc, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr class="dadosPessoaisHr" />

        <div class="form-group">
            <div class="col-md-offset-4 col-md-10 ">
                <input class="btn btn-default" type="submit" value="Guardar" />
            </div>
        </div>

    </div>
</div>
}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<!--<link rel="stylesheet" type="text/css" href="~/Content/Candidaturas.css">-->
<script type="text/javascript">    
    //altera os concelhos consoante o distrito escolhido
    function changeConcelhos(isNatural) {
        if (isNatural) {
            var distritoNaturalEscolhido = $('#DistritoNatural').val();
            var codigoDistrito = parseInt(distritoNaturalEscolhido);
            $.ajax({
                url: '@Url.Action("UpdateConcelhos", "Formulario")',
                data: {
                    distrito: codigoDistrito
                },
                type: "POST",
                success: function (concelhos) {
                    var $select = $('#ConcelhoNatural');
                    $select.empty();
                    $select.append('<option value="">Escolha uma opção...</option>');
                    $select.prop('disabled', false);
                    var $select2 = $('#FreguesiaNatural');
                    $select2.empty();
                    $select2.append('<option value="">Escolha uma opção...</option>');
                    $select2.prop('disabled', true);
                    $.each(concelhos, function (i, concelho) {
                        $('<option>', {
                            value: concelho.ID
                        }).html(concelho.Name).appendTo($select);
                    });
                    
                },
                error: function (e) { console.log(e); }
            })
        }
        else {
            var distritoMoradaEscolhido = $('#DistritoMorada').val();
            var codigoDistrito = parseInt(distritoMoradaEscolhido);
            $.ajax({
                url: '@Url.Action("UpdateConcelhos", "Formulario")',
                data: {
                    distrito: codigoDistrito
                },
                type: "POST",
                success: function (concelhos) {
                    var $select = $('#ConcelhoMorada');
                    $select.empty();
                    $select.append('<option value="">Escolha uma opção...</option>');
                    $select.prop('disabled', false);
                    var $select2 = $('#FreguesiaMorada');
                    $select2.empty();
                    $select2.append('<option value="">Escolha uma opção...</option>');
                    $select2.prop('disabled', true);
                    var $select3 = $('#Localidade');
                    $select3.empty();
                    $select3.append('<option value="">Escolha uma opção...</option>');
                    $select3.prop('disabled', true);
                    $.each(concelhos, function (i, concelho) {
                        $('<option>', {
                            value: concelho.ID
                        }).html(concelho.Name).appendTo($select);
                    });
                },
                error: function (e) { console.log(e); }
            })
        }
    }
    //altera as freguesias consoante o concelho escolhido
    function changeFreguesias(isNatural) {
        if (isNatural) {
            var distritoNaturalEscolhido = $('#DistritoNatural').val();
            var codigoDistrito = parseInt(distritoNaturalEscolhido);
            var concelhoNaturalEscolhido = $('#ConcelhoNatural').val();
            var codigoConcelho = parseInt(concelhoNaturalEscolhido);
            $.ajax({
                url: '@Url.Action("UpdateFreguesias", "Formulario")',
                data: {
                    distrito: codigoDistrito,
                    concelho: codigoConcelho
                },
                type: "POST",
                success: function (freguesias) {
                    var $select = $('#FreguesiaNatural');
                    $select.empty();
                    $select.append('<option value="">Escolha uma opção...</option>');
                    $select.prop('disabled', false);
                    $.each(freguesias, function (i, freguesia) {
                        $('<option>', {
                            value: freguesia.ID
                        }).html(freguesia.Name).appendTo($select);
                    });
                },
                error: function (e) { console.log(e); }
            })
        }
        else {
            var distritoMoradaEscolhido = $('#DistritoMorada').val();
            var codigoDistrito = parseInt(distritoMoradaEscolhido);
            var concelhoMoradaEscolhido = $('#ConcelhoMorada').val();
            var codigoConcelho = parseInt(concelhoMoradaEscolhido);
            $.ajax({
                url: '@Url.Action("UpdateFreguesias", "Formulario")',
                data: {
                    distrito: codigoDistrito,
                    concelho: codigoConcelho
                },
                type: "POST",
                success: function (freguesias) {
                    var $select = $('#FreguesiaMorada');
                    $select.empty();
                    $select.append('<option value="">Escolha uma opção...</option>');
                    $select.prop('disabled', false);
                    var $select2 = $('#Localidade');
                    $select2.empty();
                    $select2.append('<option value="">Escolha uma opção...</option>');
                    $select2.prop('disabled', true);
                    $.each(freguesias, function (i, freguesia) {
                        $('<option>', {
                            value: freguesia.ID
                        }).html(freguesia.Name).appendTo($select);
                    });
                    
                },
                error: function (e) { console.log(e); }
            })
            changeLocalidades();
        }
    }
    //altera as localidades consoante o distrito escolhido
    function changeLocalidades() {
        var distritoMoradaEscolhido = $('#DistritoMorada').val();
        var codigoDistrito = parseInt(distritoMoradaEscolhido);
        var concelhoMoradaEscolhido = $('#ConcelhoMorada').val();
        var codigoConcelho = parseInt(concelhoMoradaEscolhido);
        $.ajax({
            url: '@Url.Action("UpdateLocalidades", "Formulario")',
            data: {
                distrito: codigoDistrito,
                concelho: codigoConcelho
            },
            type: "POST",
            success: function (localidades) {
                var $select = $('#Localidade');
                $select.empty();
                $select.append('<option value="">Escolha uma opção...</option>');
                $select.prop('disabled', false);
                $.each(localidades, function (i, localidade) {
                    $('<option>', {
                        value: localidade.ID
                    }).html(localidade.Name).appendTo($select);
                });

            },
            error: function (e) { console.log(e); }
        })
    }
</script>
<style>
    .dadosPessoaisHr {
        width: 85%;
    }
</style>