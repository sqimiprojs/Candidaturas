@using Candidaturas.Models;
@model Candidaturas.Models.UserDados
<script src='https://www.google.com/recaptcha/api.js'></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@{
    ViewBag.Title = "Criar Nova Conta";
}
<div class="header">
    <img src="~/Content/img/marinha.png" alt="Logo Marinha" />
    <h1>Registo de Utilizador</h1>
</div>

@using (Html.BeginForm("NewUser", "User", FormMethod.Post, new { onsubmit = "validacaoFinal()" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-top: 40px;">
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.dadosPessoais.NomeColoquial, "Nome Completo", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dadosPessoais.NomeColoquial, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.dadosPessoais.NomeColoquial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.user.Email, "Email", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.user.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.user.Email, "", new { @class = "text-danger" })
                <span id="EmailWarning" for="Email" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dadosPessoais.TipoDocID, "Tipo de Documento de Identificação", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.dadosPessoais.TipoDocID, ViewBag.TipoDocID as IEnumerable<SelectListItem>, "Escolha uma opção...", new { @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.dadosPessoais.TipoDocID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dadosPessoais.NDI, "Nº de Documento de Identificação", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dadosPessoais.NDI, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.dadosPessoais.NDI, "", new { @class = "text-danger" })
                <span id="NDIWarning" for="NDI" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dadosPessoais.Militar, "Militar?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label class="switch">
                    @Html.CheckBoxFor(model => model.dadosPessoais.Militar, new { htmlAttributes = new { @class = "form-control", @type = "checkbox" } })
                    <span class="slider"></span>
                </label>
                <span id="switchLabel"></span>
                @Html.ValidationMessageFor(model => model.dadosPessoais.Militar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dadosPessoais.DataNascimento, "Data de Nascimento", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dadosPessoais.DataNascimento, new { htmlAttributes = new { @class = "form-control", type = "date", @required = "required" } })
                @Html.ValidationMessageFor(model => model.dadosPessoais.DataNascimento, "", new { @class = "text-danger" })
                <span id="DtNascWarning" for="NIF" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10"><div class="g-recaptcha" data-sitekey="6LfpKGgUAAAAAMuDiV5SegpE0PS9mYnptSW2zUN_"></div></div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <span class="text-danger">@ViewBag.ErrorMessage</span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Criar" class="btn btn-default" />
                @Html.ActionLink("Voltar", "Index", "Login", null, new { @class = "btn btn-default" })
            </div>

        </div>

    </div>
}
<script>
   //$(document).ready(function () {
        $("#user_Email").blur(function () {
            validarEmail();
            verificarEmail();
        });

        $("#dadosPessoais_TipoDocID").change(function () {

            var docType = $("#dadosPessoais_TipoDocID").val();
            if (docType !== "") {
                validarDoc(docType);
            }
        });

        $('#dadosPessoais_Militar').click(function () {
            changeLabel();
        });

        $("#dadosPessoais_NDI").change(function () {

            var docType = $("#dadosPessoais_TipoDocID").val();
            if (docType !== "") {
                validarDoc(docType);
            }
        });

            $("#dadosPessoais_DataNascimento").change(function () {
            validarIdd();
        });

        function validacaoCC(number) {
            if (validarCC(number) && validarDigitosCC(number)) {
                $("#NDIWarning").text("");
                $("#NDIWarning").hide();
                return true;
            }
            else {
                $("#NDIWarning").text("Nº Cartão de Cidadão inválido");
                $("#NDIWarning").show();
                return false;
            }
        }

        function validacaoBI(number) {
            if (validarBI(number) && validarDigitosBI(number)) {
                $("#NDIWarning").text("");
                $("#NDIWarning").hide();
                return true;
            }
            else {
                $("#NDIWarning").text("Nº Bilhete de Identidade inválido");
                $("#NDIWarning").show();
                return false;
            }
        }

        function validarDoc(docType) {
            var number = $("#dadosPessoais_NDI").val();
            if (number === "") {
                mostrarPlaceholderFormatoCCouBI(docType);
                return false;
            }
            if (docType === 2) {
                return validacaoBI(number);
            }
            else if (docType === 4) {
                return validacaoCC(number);
            }
        }

        function validarCC(value) {
            var re = new RegExp("^[0-9]{8}[ -]*[0-9][A-Za-z]{2}[0-9]$");
            return re.test(value);
        }

        function validarDigitosBI(value) {
            var firstLength = value.length - 1;
            var firstEight = value.substring(0, firstLength);
            var lastDigit = value[firstLength];
            var sum = 0;
            var i;

            for (i = 0; i < firstEight.length; i++) {
                sum += firstEight[firstEight.length - (i + 1)] * (i + 2);
            }

            var res = sum % 11;

            if (res === 0 || res === 1) {
                res = 0;
            }
            else {
                res = 11 - res;
            }

            return res === lastDigit;
        }

        function validarDigitosCC(value) {
            var aux = value.replace('-', '');
            var sum = 0;
            var secondDigit = false;
            var i = 0;

            for (i = aux.length - 1; i >= 0; i--) {
                var digit = aux[i];
                var valor = getNumberFromChar(digit);

                if (secondDigit) {
                    valor *= 2;
                    if (valor > 9) {
                        valor -= 9;
                    }
                }
                sum += valor;
                secondDigit = !secondDigit;
            }
            return (sum % 10) === 0;
        }

        function getNumberFromChar(char) {
            var res = 0;

            if (isNaN(char)) {
                switch (char.toUpperCase()) {
                    case 'A': res = 10; break;
                    case 'B': res = 11; break;
                    case 'C': res = 12; break;
                    case 'D': res = 13; break;
                    case 'E': res = 14; break;
                    case 'F': res = 15; break;
                    case 'G': res = 16; break;
                    case 'H': res = 17; break;
                    case 'I': res = 18; break;
                    case 'J': res = 19; break;
                    case 'K': res = 20; break;
                    case 'L': res = 21; break;
                    case 'M': res = 22; break;
                    case 'N': res = 23; break;
                    case 'O': res = 24; break;
                    case 'P': res = 25; break;
                    case 'Q': res = 26; break;
                    case 'R': res = 27; break;
                    case 'S': res = 28; break;
                    case 'T': res = 29; break;
                    case 'U': res = 30; break;
                    case 'V': res = 31; break;
                    case 'W': res = 32; break;
                    case 'X': res = 33; break;
                    case 'Y': res = 34; break;
                    case 'Z': res = 35; break;
                    default: res = 0;
                }
            }
            else {
                res = parseInt(char);
            }

            return res;
        }

        function validarBI(value) {
            var re = new RegExp("^[0-9]{8}[ -]*[0-9]$");
            return re.test(value);
        }

        //mostrar formato do CC caso seleccionar esse
        function mostrarPlaceholderFormatoCCouBI(docType) {
            $("#NDIWarning").text("");
            $("#NDIWarning").hide();
            if (docType === 4) {
                $("#dadosPessoais_NDI").prop("placeholder", "DDDDDDDD-DCCD");
            }
            else if (docType === 2) {
                $("#dadosPessoais_NDI").prop("placeholder", "DDDDDDDD-D");
            }
            else {
                $('#dadosPessoais_NDI').prop('placeholder', "");
            }
        }

        function validacaoFinal() {
            var valid = true;

            if (!validarEmail()) {
                valid = false;
            }

            if (!verificarEmail()) {
                valid = false;
            }

            if (!validarIdd()) {
                valid = false;
            }

            if (!valid) {
                event.preventDefault();
                return false;
            }
        }

        //muda a label do switch

        function changeLabel() {
            validarIdd();
            if (!$("#dadosPessoais_Militar").is(':checked')) {
                $("#switchLabel").text("Não");
            }
            else {
                $("#switchLabel").text("Sim");
            }
        }

        //validar email
        function regexEmail(email) {
            var re = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return re.test(String(email).toLowerCase());
        }

        function validarEmail() {
            var email = $("#user_Email").val();
            if (email !== "") {

                if (regexEmail(email)) {
                    $("#EmailWarning").hide();
                    return true;
                }
                else {
                    $("#EmailWarning").text("Email com formato inválido.");
                    $("#EmailWarning").show();
                    return false;
                }
            }
            else {
                if ($("#EmailWarning").is(":visible")) {
                    $("#EmailWarning").hide();
                }
                return true;
            }
        }

        function verificarEmail() {
            var email = $("#user_Email").val();
            var emailExists = true;
            var valid = true;

            if (email !== "") {
                var check = $.ajax({
                    url: '@Url.Action("checkEmail", "User")',
                    data: {
                        email: email
                    },
                    type: "POST",
                    success: function (exists) {
                        if (exists === "True") {
                            $("#EmailWarning").text("Este email já se encontra em uso.");
                            $("#EmailWarning").show();
                            emailExists = false;
                        }
                    },
                    error: function (e) { console.log(e); }
                });
            }
            check.done(function () {
                if (emailExists) {
                    valid = true;
                } else {
                    valid = false;
                }
            });
            return valid;
        }

        function validarIdd() {
            var isMil = $('#dadosPessoais_Militar').is(':checked');
            var dtNasc = new Date($('#dadosPessoais_DataNascimento').val());
            var idd = new Date().getFullYear() - dtNasc.getFullYear();

            if (dtNasc >= new Date()) {
                $("#DtNascWarning").text("Data de nascimento não pode ser no futuro.");
                $("#DtNascWarning").show();
                return false;
            }
            else if (!isMil && idd >= 22) {
                $("#DtNascWarning").text("Tem de ter 22 anos para fazer a candidatura.");
                $("#DtNascWarning").show();
                return false;
            }
            else if (isMil && idd >= 24) {
                $("#DtNascWarning").text("Tem de ter 24 anos para fazer a candidatura.");
                $("#DtNascWarning").show();
                return false;
            }
            else {
                $("#DtNascWarning").text("");
                $("#DtNascWarning").hide();
                return true;
            }
        }
//});
</script>
<style>
    #switchLabel {
        position: absolute;
        margin-left: 10px;
        margin-top: 7px;
        font-weight: bold;
    }

    @@media only screen and (min-width: 1000px) {
        div.g-recaptcha {
            margin: 10px 195px;
            width: 304px;
        }
    }

    @@media only screen and (max-width: 900px) {
        div.g-recaptcha {
            margin: 10px 15px;
        }
    }
</style>