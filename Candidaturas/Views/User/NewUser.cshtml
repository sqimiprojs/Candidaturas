@using Candidaturas.Models;

<script src='https://www.google.com/recaptcha/api.js'></script>
<script type="text/javascript" src="~/Scripts/documentValidation.js"></script>
@model Candidaturas.Models.UserMilitar
@{

    ViewBag.Title = "Criar Nova Conta";
}

@using (@Html.BeginForm("NewUser", "User", FormMethod.Post, new { @id="newuserform" }))
{
    @Html.AntiForgeryToken()

    <div class="row my-3">
        <div class="col-1">
            <img src="~/Content/img/marinha.png" alt="Logo Marinha" />
        </div>
        <div class="col">
            <h1>Registo de Utilizador</h1>
        </div>
        <hr />
    </div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row my-2">
        <div class="col">
            <h4>Dados Pessoais</h4><hr />
            <div class="form-group">
                @Html.LabelFor(model => model.user.NomeColoquial, "Nome Completo", htmlAttributes: new { @class = "control-label required" })
                <div class="col">
                    @Html.EditorFor(model => model.user.NomeColoquial, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.user.NomeColoquial, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.user.DataNascimento, "Data de Nascimento", htmlAttributes: new { @class = "control-label required" })
                <div class="col">
                    @Html.EditorFor(model => model.user.DataNascimento, new { htmlAttributes = new { @class = "form-control", type = "date", @required = "required", @id = "DtNasc" } })
                    @Html.ValidationMessageFor(model => model.user.DataNascimento, "", new { @class = "text-danger", @id = "DtNascWarning" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.user.Email, "Email", htmlAttributes: new { @class = "control-label required" })
                <div class="col">
                    @Html.EditorFor(model => model.user.Email, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "Email" } })
                    @Html.ValidationMessageFor(model => model.user.Email, "", new { @class = "text-danger", @id = "EmailWarning" })
                </div>
            </div>
        </div>
        <div class="col">
            <h4>Documento de Identificação</h4><hr />
            <div class="form-group">
                @Html.LabelFor(model => model.user.TipoDocID, "Tipo", htmlAttributes: new { @class = "control-label required" })
                <div class="col">
                    @Html.DropDownListFor(model => model.user.TipoDocID, ViewBag.TipoDocID as IEnumerable<SelectListItem>, "Escolha uma opção...", new { @class = "form-control", @required = "required", @id = "TipoDoc" })
                    @Html.ValidationMessageFor(model => model.user.TipoDocID, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.user.NDI, "Número", htmlAttributes: new { @class = "control-label required" })
                <div class="col">
                    @Html.EditorFor(model => model.user.NDI, new { htmlAttributes = new { @class = "form-control", @required = "required", @id = "NDI" } })
                    @Html.ValidationMessageFor(model => model.user.NDI, "", new { @class = "text-danger", @id = "NDIWarning" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.user.DocumentoValidade, "Validade", htmlAttributes: new { @class = "control-label required" })
                <div class="col">
                    @Html.EditorFor(model => model.user.DocumentoValidade, new { htmlAttributes = new { @class = "form-control", type = "date", @required = "required", @id = "DocVali" } })
                    @Html.ValidationMessageFor(model => model.user.DocumentoValidade, "", new { @class = "text-danger", @id = "DocValiWarning" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group">
            @Html.LabelFor(model => model.user.Militar, "Militar?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col">
                <label class="switch">
                    @Html.CheckBoxFor(model => model.user.Militar, new { htmlAttributes = new { @class = "form-control", @type = "checkbox" } })
                    <span class="slider"></span>
                </label>
                <!-- <span id="switchLabel"></span>-->
                @Html.ValidationMessageFor(model => model.user.Militar, "", new { @class = "text-danger" })

            </div>
        </div>
    </div>

    <div id="militar">
        <h4>Dados Militares</h4><hr />
        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.militar.Ramo, "Ramo", htmlAttributes: new { @class = "control-label required" })
                    <div class="col">
                        @Html.DropDownListFor(model => model.militar.Ramo, ViewBag.Ramo as IEnumerable<SelectListItem>, "Escolha uma opção...", new { @id = "Ramo", @class = "form-control", @required = "required", @onchange = "changePostos()" })
                        @Html.ValidationMessageFor(model => model.militar.Ramo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.militar.Classe, "Classe", htmlAttributes: new { @class = "control-label " })
                    <div class="col">
                        @Html.EditorFor(model => model.militar.Classe, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.militar.Classe, "", new { @class = "text-danger" })
                    </div>
                </div>
                </div>
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.militar.Categoria, "Categoria", htmlAttributes: new { @class = "control-label required" })
                    <div class="col">
                        @Html.DropDownListFor(model => model.militar.Categoria, ViewBag.Categoria as IEnumerable<SelectListItem>, "Escolha uma opção...", new { @id = "Categoria", @class = "form-control", @required = "required", @onchange = "changePostos()" })
                        @Html.ValidationMessageFor(model => model.militar.Categoria, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.militar.NIM, "Número de Identificação Militar", htmlAttributes: new { @class = "control-label required" })
                    <div class="col">
                        @Html.EditorFor(model => model.militar.NIM, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.militar.NIM, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.militar.Posto, "Posto", htmlAttributes: new { @class = "control-label required disabled" })
                    <div class="col">
                        @Html.DropDownListFor(model => model.militar.Posto, ViewBag.Posto as IEnumerable<SelectListItem>, "Escolha uma opção...", new { @id = "Posto", @class = "form-control", @required = "required", disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.militar.Posto, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group">
            <div class="g-recaptcha" data-sitekey="6LfpKGgUAAAAAMuDiV5SegpE0PS9mYnptSW2zUN_"></div>
            <span class="text-danger">@ViewBag.ErrorMessage</span>
        </div>
    </div>
    <div class="row">
        <div class="form-group">
            <input type="submit" value="Criar" class="btn btn-primary" />
            @Html.ActionLink("Voltar", "Index", "Login", null, new { @class = "btn btn-outline-primary" })
        </div>
    </div>
}
<script>

    window.onload = toogleMilitar(false);
    $('#user_Militar').click(function () {
        changeLabel();
    });

    //muda a label do switch
    function changeLabel() {
        if (!$("#user_Militar").is(':checked')) {
            $("#switchLabel").text("Não");
            toogleMilitar(false);
        }
        else {
            $("#switchLabel").text("Sim");
            toogleMilitar(true);
        }
    }

    function toogleMilitar(bool) {
        var nim = $('#militar_NIM');
        if (bool) {
            $("#militar").show();
        } else {
            $("#militar").hide();
        }
        nim.prop('required', bool);
        var ramo = $('#Ramo');
        ramo.prop('required', bool);
        var categoria = $('#Categoria');
        categoria.prop('required', bool);
        var posto = $('#Posto');
        posto.prop('required', bool);

    }

    //altera os postos consoante o ramo e categoria escolhido
    function changePostos() {
        var ramoEscolhido = $('#Ramo').val();
        var categoriaEscolhida = $('#Categoria').val();
        if (categoriaEscolhida == "" || ramoEscolhido == "" || ramoEscolhido == "MIL") {
            var $posto = $('#Posto');
            $posto.empty();
            $posto.append('<option value="">Escolha uma opção...</option>');
            $posto.prop('disabled', true);
        }
        else {
            $.ajax({
            url: '@Url.Action("UpdatePostos", "User")',
            data: {
                ramo: ramoEscolhido,
                categoria: categoriaEscolhida
            },
            type: "POST",
            success: function (postos) {
                var $select = $('#Posto');
                $select.empty();
                $select.append('<option value="">Escolha uma opção...</option>');
                $select.prop('disabled', false);
                $.each(postos, function (i, posto) {
                    $('<option>', {
                        value: posto.ID
                    }).html(posto.Name).appendTo($select);
                });
            },
            error: function (e) { console.log(e); }
        })
        }

    }

    function resetPostos() {
        var $posto = $('#Posto');
        $posto.empty();
        $posto.append('<option value="">Escolha uma opção...</option>');
        $posto.prop('disabled', true);
    }
</script>
<style>
    #switchLabel {
        position: absolute;
        margin-left: 10px;
        margin-top: 7px;
        font-weight: bold;
    }
</style>
