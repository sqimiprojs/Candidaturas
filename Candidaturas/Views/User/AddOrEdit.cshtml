@using Candidaturas.Models;


@model Candidaturas.Models.User

@{
    ViewBag.Title = "Novo Utilizador";
}
<div class="header">
    <img src="~/Content/marinha.png" alt="Logo Marinha" />
    <h1>Registo Utilizador</h1>
</div>

@using (Html.BeginForm("AddOrEdit", "User", FormMethod.Post, new { onsubmit = "validacaoFinal()" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="margin-top: 40px;">
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NomeCompleto, "Nome Completo", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeCompleto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeCompleto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                <span id="EmailWarning" for="Email" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoDocID, "Tipo de Documento de Identificação", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TipoDocID, ViewBag.TipoDocID as SelectList, "Escolha uma opção...", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoDocID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NDI, "Nº de Documento de Identificação", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NDI, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NDI, "", new { @class = "text-danger" })
                <span id="NIFWarning" for="NIF" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Militar, "Militar?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label class="switch">
                    @Html.CheckBoxFor(model => model.Militar, new { htmlAttributes = new { @class = "form-control", @type = "checkbox" } })
                    <div class="slider"></div>
                </label>
                <span id="switchLabel"></span>
                @Html.ValidationMessageFor(model => model.Militar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataNascimento, "Data de Nascimento", htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10"><div class="g-recaptcha" data-sitekey="6LfpKGgUAAAAAMuDiV5SegpE0PS9mYnptSW2zUN_"></div></div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Criar" class="btn btn-default" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <label class="label-danger">@ViewBag.ErrorMessage</label>
            </div>
        </div>
    </div>
}
<script src='https://www.google.com/recaptcha/api.js'></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<style>
    #switchLabel {
        position: absolute;
        margin-left: 10px;
        margin-top: 7px;
        font-weight: bold;
    }

    @@media only screen and (min-width: 1000px) {
        div.g-recaptcha {
            margin: 10px 195px;
            width: 304px;
        }
    }

    @@media only screen and (max-width: 900px) {
        div.g-recaptcha {
            margin: 10px 15px;
        }
    }
</style>
<script type="text/javascript">
    $("#NDI").blur(function () {
        validarTipoDocId();
        mostrarPlaceholderFormatoCCouBI();
    });

    $("#TipoDocID").change(function () {
        validarTipoDocId();
        mostrarPlaceholderFormatoCCouBI();
    });

    $("#Email").blur(function () {
        validarEmail();
    });

    function validarTipoDocId() {
        var chosenValue = $("#TipoDocID").val();

        if (validarDocumentoEscolhido(chosenValue)) {
            var term = $("#NDI").val();

            if (term != "") {
                if (validarCC() && chosenValue == "Cartão do Cidadão") {
                    $("#NIFWarning").hide();
                    return true;
                }
                if (validarBI() && chosenValue == "Bilhete de Identidade") {
                    $("#NIFWarning").hide();
                    return true;
                }
                else {
                    $("#NIFWarning").text("Cartão de cidadão ou bilhete de identidade inválido.");
                    $("#NIFWarning").show();
                    event.preventDefault();
                    return false;
                }
            }
            else {
                $("#NIFWarning").hide();
                return true;
            }
        }
        else {
            if ($("#NIFWarning").is(":visible")) {
                $("#NIFWarning").hide();
            }
            return true;
        }
    }

    function validarCC() {
        var term = $("#NDI").val();
        var re = new RegExp("^[0-9]{8}[ -]*[0-9][A-Za-z]{2}[0-9]$");

        return re.test(term);
    }

    function validarBI() {
        var term = $("#NDI").val();
        var re = new RegExp("^[0-9]{8}[ -]*[0-9]$");

        return re.test(term);
    }

    function validarDocumentoEscolhido(tipoDocID) {
        return tipoDocID == "Cartão do Cidadão" || tipoDocID == "Bilhete de Identidade";
    }

    //mostrar formato do CC caso seleccionar esse
    function mostrarPlaceholderFormatoCCouBI() {
        var chosenValue = $("#TipoDocID").val();

        if (chosenValue == "Cartão do Cidadão") {
            $("#NDI").attr("placeholder", "DDDDDDDD-CAAT");
        }
        else if (chosenValue == "Bilhete de Identidade") {
            $("#NDI").attr("placeholder", "DDDDDDDD-C");
        }
        else {
            $('#NDI').removeAttr('placeholder');
        }
    }

    function validacaoFinal() {
        var valid = true;

        if (!validarTipoDocId()) {
            valid = false;
        }

        if (!validarEmail()) {
            valid = false;
        }

        if (!valid) {
            event.preventDefault();
            return false;
        }
    }

    //muda a label do switch
    $('#Militar').click(function () {
        changeLabel();
    });

    $(document).ready(function () {
        changeLabel();
    });

    function changeLabel() {
        if (!$("#Militar").is(':checked')) {
            $("#switchLabel").text("Não");
        }
        else {
            $("#switchLabel").text("Sim");
        }
    }

    //validar email
    function regexEmail(email) {
        var re = /[A-Z0-9._%+-]+@@[A-Z0-9.-]+.[A-Z]{2,4}/igm;

        return re.test(email);
    }

    function validarEmail() {
        var email = $("#Email").val();

        if (email != "") {
            if (regexEmail(email)) {
                $("#EmailWarning").hide();
                return true;
            }
            else {
                $("#EmailWarning").text("Email com formato inválido.");
                $("#EmailWarning").show();
                return false;
            }
        }
        else {
            if ($("#EmailWarning").is(":visible")) {
                $("#EmailWarning").hide();
            }
            return true;
        }
    }
</script>