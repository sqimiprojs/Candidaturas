@model Candidaturas.Models.Inquerito

@{
    Layout = null;
}

@using (Html.BeginForm("Inquerito", "Inquerito", FormMethod.Post, new { @id = "formInquerito" }))
{
    @Html.AntiForgeryToken()
<div class=" container col-8">
    <div class="row">
        <div class="col">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.SituacaoPai, "Situação do Pai", htmlAttributes: new { @class = "control-label required" })
                <div class="col">
                    @Html.DropDownListFor(model => model.SituacaoPai, ViewBag.SituacaoPai as SelectList, "Escolha uma opção...", new { @class = "form-control", @id = "situacaoPai" })
                    @Html.ValidationMessageFor(model => model.SituacaoPai, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col">
            <div class="form-group" id="situacaoPaiOutra">
                @Html.LabelFor(model => model.OutraPai, "Outra", htmlAttributes: new { @class = "control-label required disabled" })
                <div class="col">
                    @Html.EditorFor(model => model.OutraPai, new { htmlAttributes = new { @class = "form-control ", @Value = (ViewBag.Inquerito == null ? "" : ViewBag.Inquerito.OutraPai) } })
                    @Html.ValidationMessageFor(model => model.OutraPai, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.SituacaoMae, "Situação da Mãe", htmlAttributes: new { @class = "control-label required " })
                <div class="col">
                    @Html.DropDownListFor(model => model.SituacaoMae, ViewBag.SituacaoMae as SelectList, "Escolha uma opção...", new { @class = "form-control", @id = "situacaoMae" })
                    @Html.ValidationMessageFor(model => model.SituacaoMae, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col">
            <div class="form-group" id="situacaoMaeOutra">
                @Html.LabelFor(model => model.OutraMae, "Outra", htmlAttributes: new { @class = "control-label required" })
                <div class="col">
                    @Html.EditorFor(model => model.OutraMae, new { htmlAttributes = new { @class = "form-control", @Value = (ViewBag.Inquerito == null ? "" : ViewBag.Inquerito.OutraMae) } })
                    @Html.ValidationMessageFor(model => model.OutraMae, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="form-group">
                @Html.LabelFor(model => model.ConhecimentoEscola, "Conhecimento da Escola", htmlAttributes: new { @class = "control-label required" })
                <div class="col">
                    @Html.DropDownListFor(model => model.ConhecimentoEscola, ViewBag.ConhecimentoEscola as SelectList, "Escolha uma opção...", new { @class = "form-control", @id = "conhecimentoEscola" })
                    @Html.ValidationMessageFor(model => model.ConhecimentoEscola, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col">
            <div class="form-group" id="conhecimentoEscolaOutro">
                @Html.LabelFor(model => model.Outro, "Outro", htmlAttributes: new { @class = "control-label disabled required" })
                <div class="col">
                    @Html.EditorFor(model => model.Outro, new { htmlAttributes = new { @class = "form-control", @Value = (ViewBag.Inquerito == null ? "" : ViewBag.Inquerito.Outro) } })
                    @Html.ValidationMessageFor(model => model.Outro, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="form-group">
            @Html.LabelFor(model => model.CandidatarOutros, "Candidatou-se a outros Estabelecimentos de Ensino?", htmlAttributes: new { @class = "control-label" })
            <div class="col">
                <label class="switch">
                    @Html.CheckBoxFor(model => model.CandidatarOutros, new { @class = "form-control", @id = "TickOutros" })
                    <div class="slider"></div>
                </label>
                <span id="switchLabel"></span>
            </div>
        </div>
    </div>
    <div class="row">

        <div class="form-group">
            <div class="col-md-offset-2 col">
                <input id="AddInquerito" type="submit" value="Continuar" class="btn btn-primary" />
                
            </div>
        </div>
    </div>
</div>
    

}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">
    window.onload = checkOthers();
    $(document).ready(function () {

        $("#situacaoPai").change(function () {
            checkPai();
        });
        $("#situacaoMae").change(function () {
            checkMae();
        });
        $("#conhecimentoEscola").change(function () {
            checkEscola();
        });
       
    });

    function checkPai() {
        var cp = $("#situacaoPai").val() == 5;
        console.log(cp);
        if (cp) {
            $("#situacaoPaiOutra").show();
        }
        else {
            $("#situacaoPaiOutra").hide();
        }
        $("#OutraPai").prop("required", cp);
    }
    
    function checkMae() {
        var cm = $("#situacaoMae").val() == 5;
        console.log(cm);
        if (cm) {
            $("#situacaoMaeOutra").show();
        }
        else {
            $("#situacaoMaeOutra").hide();
        }
        $("#OutraMae").prop("required", cm);
    }

    function checkEscola() {
        var ce = $("#conhecimentoEscola").val() == 6;
        if (ce) {
            $("#conhecimentoEscolaOutro").show();
        } else {
            $("#conhecimentoEscolaOutro").hide();
        }
        $("#Outro").prop("required", ce);
    }

    function checkOthers() {
        checkPai();
        checkMae();
        checkEscola();

         if (@ViewBag.dadosPreenchidos == false || @ViewBag.finalizado == true) {
            var $button = $('#AddInquerito');
             $button.prop('disabled', true);
             var $form1 = $('#situacaoPai');
             $form1.prop('disabled', true);
             var $form2 = $('#situacaoMae');
             $form2.prop('disabled', true);
             var $form3 = $('#conhecimentoEscola');
             $form3.prop('disabled', true);
             var $form4 = $('#TickOutros');
             $form4.prop('disabled', true);
         }

    }
    $('.slider').click(function () {
        if (@ViewBag.dadosPreenchidos == true && @ViewBag.finalizado == false) {
            if ($('#TickOutros').is(':checked')) {
                $("#switchLabel").text("Não");
                $("#CandidatarOutros").prop('checked', false);
            }
            else {
                $("#switchLabel").text("Sim");
                $("#CandidatarOutros").prop('checked', true);
            }
        }
    });
    
    //verifica se houve alterações na tab Inquérito
    /*var inqueritoChanged = false;

    $('#formInquerito input').change(function () {
        inqueritoChanged = true;
    });
    $('#formInquerito select').change(function () {
        inqueritoChanged = true;

        checkOthers();

    });*/
</script>

<style>
    #switchLabel {
        position: absolute;
        margin-left: 10px;
        margin-top: 7px;
        font-weight: bold;
    }
</style>
